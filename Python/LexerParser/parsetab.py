
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV FLOAT IGUAL INT LETRA MUL PARE1 PARE2 RES SUM SWITCH TIPOstatement : TIPO LETRA IGUAL expression statement : expression  statement : SWITCH LETRA LETRA \n    expression : expression SUM expression\n               | expression RES expression\n               | expression MUL expression\n               | expression DIV expression\n    expression : PARE1 expression PARE2\n    expression : INT\n               | FLOAT\n    \n    expression : LETRA\n    '
    
_lr_action_items = {'TIPO':([0,],[2,]),'SWITCH':([0,],[5,]),'PARE1':([0,6,10,11,12,13,16,],[6,6,6,6,6,6,6,]),'INT':([0,6,10,11,12,13,16,],[7,7,7,7,7,7,7,]),'FLOAT':([0,6,10,11,12,13,16,],[8,8,8,8,8,8,8,]),'LETRA':([0,2,5,6,10,11,12,13,14,16,],[3,9,14,3,3,3,3,3,21,3,]),'$end':([1,3,4,7,8,17,18,19,20,21,22,23,],[0,-11,-2,-9,-10,-4,-5,-6,-7,-3,-8,-1,]),'SUM':([3,4,7,8,15,17,18,19,20,22,23,],[-11,10,-9,-10,10,10,10,10,10,-8,10,]),'RES':([3,4,7,8,15,17,18,19,20,22,23,],[-11,11,-9,-10,11,11,11,11,11,-8,11,]),'MUL':([3,4,7,8,15,17,18,19,20,22,23,],[-11,12,-9,-10,12,12,12,12,12,-8,12,]),'DIV':([3,4,7,8,15,17,18,19,20,22,23,],[-11,13,-9,-10,13,13,13,13,13,-8,13,]),'PARE2':([3,7,8,15,17,18,19,20,22,],[-11,-9,-10,22,-4,-5,-6,-7,-8,]),'IGUAL':([9,],[16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,6,10,11,12,13,16,],[4,15,17,18,19,20,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> TIPO LETRA IGUAL expression','statement',4,'p_statement_var','Lex.py',59),
  ('statement -> expression','statement',1,'p_statement_exp','Lex.py',63),
  ('statement -> SWITCH LETRA LETRA','statement',3,'p_intercambio','Lex.py',67),
  ('expression -> expression SUM expression','expression',3,'p_expression','Lex.py',81),
  ('expression -> expression RES expression','expression',3,'p_expression','Lex.py',82),
  ('expression -> expression MUL expression','expression',3,'p_expression','Lex.py',83),
  ('expression -> expression DIV expression','expression',3,'p_expression','Lex.py',84),
  ('expression -> PARE1 expression PARE2','expression',3,'p_expression_pare','Lex.py',89),
  ('expression -> INT','expression',1,'p_expression_int_float','Lex.py',94),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','Lex.py',95),
  ('expression -> LETRA','expression',1,'p_expression_var','Lex.py',101),
]
