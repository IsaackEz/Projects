package Dialogo;
import cafe.Cafe;
import cafe.Orden;
import cafe.TipoCafe;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class CafeDialogo extends javax.swing.JDialog {
    private String nombreString = null;
    private String tipoString = null;
    private String endulString = null;
    private String tamString = null;
    private String lecheString = null;
    private double precio = 0.0;
    private boolean canceled = false;
    
    private String tipoCafeAnt = null;
    private String endulCafeAnt = null;
    private String lecheCafeAnt = null;
    private String tamCafeAnt = null;
    
    private Orden orden;
    
    private static final TipoCafe TIPO_CAFE = new TipoCafe();
        
    public String getNombre(){
        return nombreString;
    }
        
    public String getEnd(){
        return endulString;
    }
    
    public String getTam(){
        return tamString;
    }
    
    public String getLeche(){
        return lecheString;
    }
    
    public String getTipo(){
        return tipoString;
    }
    
    public double getPrecio(){
        return precio;
    }
    
    public boolean isCanceled(){
        return canceled;
    }
    
    public void editarCafe(Cafe c){
        if(c == null){
            return;
        }
        else{
            c.setPrecio(getPrecio());
            c.setTipo(getTipo());
            c.setEnd(getEnd());
            c.setLeche(getLeche());
            c.setTam(getTam());
            c.setNombre(getNombre());
        }
    }
    
    public Cafe getCafe(){
        if(this.isCanceled()){
            return null;
        }
        else{            
            String t = getTipo();
            String e = getEnd();
            String T = getTam();
            String l = getLeche();
            String n = getNombre();
            double p = getPrecio();
            
            Cafe c = new Cafe();                
            c.setNombre(n);
            c.setPrecio(p);
            c.setTipo(t);
            c.setEnd(e);
            c.setLeche(l);
            c.setTam(T);
            
            return c;
        }
    }
    
    public static void muestraContenido(String archivo) throws FileNotFoundException, IOException {
        String cadena;
        FileReader f = new FileReader(archivo);
        try (BufferedReader b = new BufferedReader(f)) {
            System.out.println("Mostrando contenido");
            while((cadena = b.readLine())!=null) {
                System.out.println(cadena);
            }
        }
    }
    
public CafeDialogo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TipoCafeButtonGroup = new javax.swing.ButtonGroup();
        EndulButtonGroup = new javax.swing.ButtonGroup();
        TamButtonGroup = new javax.swing.ButtonGroup();
        LecheButtonGroup = new javax.swing.ButtonGroup();
        Pregunta = new javax.swing.JLabel();
        Endulzante = new javax.swing.JLabel();
        Tama単o = new javax.swing.JLabel();
        Leche = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        NombreTextField = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        Ok = new javax.swing.JButton();
        Americano = new javax.swing.JRadioButton();
        Latte = new javax.swing.JRadioButton();
        Capuccino = new javax.swing.JRadioButton();
        Caramelo = new javax.swing.JRadioButton();
        Menta = new javax.swing.JRadioButton();
        Avellana = new javax.swing.JRadioButton();
        Chico = new javax.swing.JRadioButton();
        Mediano = new javax.swing.JRadioButton();
        Grande = new javax.swing.JRadioButton();
        Entera = new javax.swing.JRadioButton();
        Descremada = new javax.swing.JRadioButton();
        Ligera = new javax.swing.JRadioButton();
        SinLeche = new javax.swing.JRadioButton();
        SinEnd = new javax.swing.JRadioButton();
        Otro = new javax.swing.JRadioButton();
        OtroTextField = new javax.swing.JTextField();
        OtroLabel = new javax.swing.JLabel();
        FinPedido = new javax.swing.JButton();
        Ordenar = new javax.swing.JButton();
        HistorialButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Pregunta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pregunta.setText("Que cafe desea?");

        Endulzante.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Endulzante.setText("Endulzante?");

        Tama単o.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Tama単o.setText("Que tama単o?");

        Leche.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Leche.setText("Que tipo de leche?");

        Nombre.setText("Nombre:");

        NombreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreTextFieldActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Ok.setText("Siguiente ");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        Americano.setText("Americano");
        Americano.setFocusPainted(false);
        Americano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmericanoActionPerformed(evt);
            }
        });

        Latte.setText("Latte");
        Latte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LatteActionPerformed(evt);
            }
        });

        Capuccino.setText("Capuccino");
        Capuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CapuccinoActionPerformed(evt);
            }
        });

        Caramelo.setText("Caramelo");
        Caramelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarameloActionPerformed(evt);
            }
        });

        Menta.setText("Menta");
        Menta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MentaActionPerformed(evt);
            }
        });

        Avellana.setText("Avellana");
        Avellana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvellanaActionPerformed(evt);
            }
        });

        Chico.setText("Chico");
        Chico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChicoActionPerformed(evt);
            }
        });

        Mediano.setText("Mediano");
        Mediano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedianoActionPerformed(evt);
            }
        });

        Grande.setText("Grande");
        Grande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrandeActionPerformed(evt);
            }
        });

        Entera.setText("Entera");
        Entera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnteraActionPerformed(evt);
            }
        });

        Descremada.setText("Descremada");
        Descremada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescremadaActionPerformed(evt);
            }
        });

        Ligera.setText("Ligera");
        Ligera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LigeraActionPerformed(evt);
            }
        });

        SinLeche.setText("Sin leche");

        SinEnd.setText("Sin endulzante");
        SinEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SinEndActionPerformed(evt);
            }
        });

        Otro.setText("Otro");
        Otro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtroActionPerformed(evt);
            }
        });
        Otro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                OtroFocusLost(evt);
            }
        });

        OtroTextField.setEnabled(false);
        OtroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtroTextFieldActionPerformed(evt);
            }
        });

        OtroLabel.setText("Otro:");

        FinPedido.setText("Finalizar pedido");
        FinPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinPedidoActionPerformed(evt);
            }
        });

        Ordenar.setText("Ordenar");
        Ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenarActionPerformed(evt);
            }
        });

        HistorialButton.setText("Historial");
        HistorialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistorialButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Chico)
                        .addGap(123, 123, 123)
                        .addComponent(Mediano)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(127, 127, 127)
                                        .addComponent(Descremada)
                                        .addGap(65, 65, 65)
                                        .addComponent(Ligera))
                                    .addComponent(Entera))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Grande)
                                    .addComponent(SinLeche)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Ok)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FinPedido)
                                .addGap(18, 18, 18)
                                .addComponent(HistorialButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Ordenar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cancelar)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Americano)
                                .addGap(47, 47, 47)
                                .addComponent(Latte)
                                .addGap(65, 65, 65)
                                .addComponent(Capuccino))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Caramelo)
                                .addGap(71, 71, 71)
                                .addComponent(Menta)
                                .addGap(62, 62, 62)
                                .addComponent(Avellana)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SinEnd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Otro)
                                .addGap(27, 27, 27))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Tama単o)
                                .addGap(188, 188, 188))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Nombre)
                                .addGap(18, 18, 18)
                                .addComponent(NombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(Endulzante))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(Leche)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(OtroLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OtroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(Pregunta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Pregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Americano)
                    .addComponent(Latte)
                    .addComponent(Capuccino)
                    .addComponent(Otro))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OtroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OtroLabel))
                .addGap(18, 18, 18)
                .addComponent(Endulzante)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Caramelo)
                    .addComponent(Menta)
                    .addComponent(Avellana)
                    .addComponent(SinEnd))
                .addGap(19, 19, 19)
                .addComponent(Tama単o, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mediano)
                    .addComponent(Chico)
                    .addComponent(Grande))
                .addGap(18, 18, 18)
                .addComponent(Leche)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ligera)
                    .addComponent(SinLeche)
                    .addComponent(Descremada)
                    .addComponent(Entera))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(FinPedido)
                    .addComponent(Ok)
                    .addComponent(Ordenar)
                    .addComponent(HistorialButton))
                .addContainerGap())
        );

        this.TipoCafeButtonGroup.add(Americano);
        this.TipoCafeButtonGroup.add(Latte);
        this.TipoCafeButtonGroup.add(Capuccino);
        this.EndulButtonGroup.add(Caramelo);
        this.EndulButtonGroup.add(Menta);
        this.EndulButtonGroup.add(Avellana);
        this.TamButtonGroup.add(Chico);
        this.TamButtonGroup.add(Mediano);
        this.TamButtonGroup.add(Grande);
        this.LecheButtonGroup.add(Entera);
        this.LecheButtonGroup.add(Descremada);
        this.LecheButtonGroup.add(Ligera);
        this.LecheButtonGroup.add(SinLeche);
        this.EndulButtonGroup.add(SinEnd);
        this.TipoCafeButtonGroup.add(Otro);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        this.tipoCafeAnt = null;
        this.endulCafeAnt = null;
        this.lecheCafeAnt = null;
        this.tamCafeAnt = null;
        nombreString = this.NombreTextField.getText(); 
        if(this.Americano.isSelected()){
            tipoString = this.Americano.getText();
        }
        else if(this.Capuccino.isSelected()){
            tipoString = this.Capuccino.getText();
        }
        else if(this.Latte.isSelected()){
            tipoString = this.Latte.getText();
        }
        else if(this.Otro.isSelected()){
            tipoString = this.OtroTextField.getText();
        }
        else{
            System.out.println("No ha seleccionado un cafe...");
        }
        if(this.Menta.isSelected()){
            endulString = this.Menta.getText();
        }
        else if(this.Avellana.isSelected()){
            endulString = this.Avellana.getText();
        }
        else if(this.Caramelo.isSelected()){
            endulString = this.Caramelo.getText();
        }
        else if(this.SinEnd.isSelected()){
            endulString = this.SinEnd.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo...");
        }
        if(this.Entera.isSelected()){
            lecheString = this.Entera.getText();
        }
        else if(this.Ligera.isSelected()){
            lecheString = this.Ligera.getText();
        }
        else if(this.Descremada.isSelected()){
            lecheString = this.Descremada.getText();
        }
        else if(this.SinLeche.isSelected()){
            lecheString = this.SinLeche.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo");
        }
        if(this.Chico.isSelected()){
            tamString = this.Chico.getText();
        }
        else if(this.Mediano.isSelected()){
            tamString = this.Mediano.getText();
        }
        else if(this.Grande.isSelected()){
            tamString = this.Grande.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo...");
        }
        
        //this.canceled = false;
        //this.dispose();
        //this.setVisible(true);
        if(orden == null){
            orden = new Orden();
        }
        try {
            orden.agregarCafe(this.getCafe());
        } catch (IOException ex) {
            Logger.getLogger(CafeDialogo.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.precio = 0.0;
        TipoCafeButtonGroup.clearSelection();
        TamButtonGroup.clearSelection();
        LecheButtonGroup.clearSelection();
        EndulButtonGroup.clearSelection();
        
    }//GEN-LAST:event_OkActionPerformed

    private void AmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmericanoActionPerformed
        OtroTextField.setEnabled(false);
        if(this.Americano.isSelected()){
            precio += TIPO_CAFE.getPrecio("Americano");
        }
                
        if(this.tipoCafeAnt == null)
        {
            this.tipoCafeAnt = "Americano";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tipoCafeAnt);
        }
    }//GEN-LAST:event_AmericanoActionPerformed

    private void NombreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreTextFieldActionPerformed

    }//GEN-LAST:event_NombreTextFieldActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        this.dispose();
        this.canceled = true;
    }//GEN-LAST:event_CancelarActionPerformed

    private void OtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtroActionPerformed
        if(Otro.isSelected()){
            OtroTextField.setEnabled(true);
            precio += TIPO_CAFE.getPrecio("Otro");
        }
        
        if(this.tipoCafeAnt == null)
        {
            this.tipoCafeAnt = "Otro";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tipoCafeAnt);
        }
    }//GEN-LAST:event_OtroActionPerformed

    private void OtroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtroTextFieldActionPerformed
        
    }//GEN-LAST:event_OtroTextFieldActionPerformed

    private void LatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LatteActionPerformed
        OtroTextField.setEnabled(false);
        if(this.Latte.isSelected()){
            precio += TIPO_CAFE.getPrecio("Latte");
        }
        
        if(this.tipoCafeAnt == null)
        {
            this.tipoCafeAnt = "Latte";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tipoCafeAnt);
        }
    }//GEN-LAST:event_LatteActionPerformed

    private void CapuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CapuccinoActionPerformed
        OtroTextField.setEnabled(false);
        if(this.Capuccino.isSelected()){
            precio += TIPO_CAFE.getPrecio("Capuccino");
        }
        
        if(this.tipoCafeAnt == null)
        {
            this.tipoCafeAnt = "Capuccino";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tipoCafeAnt);
        }
    }//GEN-LAST:event_CapuccinoActionPerformed

    private void OtroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OtroFocusLost
        
    }//GEN-LAST:event_OtroFocusLost

    private void SinEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SinEndActionPerformed
    
    }//GEN-LAST:event_SinEndActionPerformed

    private void MedianoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedianoActionPerformed
        if(this.Mediano.isSelected()){
            precio += TIPO_CAFE.getPrecio("Mediano");
        }
        if(this.tamCafeAnt == null)
        {
            this.tamCafeAnt = "Mediano";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tamCafeAnt);
        }
    }//GEN-LAST:event_MedianoActionPerformed

    private void CarameloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarameloActionPerformed
        if(this.Caramelo.isSelected()){
            precio += TIPO_CAFE.getPrecio("Caramelo");
        }
        
        if(this.endulCafeAnt == null)
        {
            this.endulCafeAnt = "Caramelo";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(endulCafeAnt);
        }
    }//GEN-LAST:event_CarameloActionPerformed

    private void MentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MentaActionPerformed
        if(this.Menta.isSelected()){
            precio += TIPO_CAFE.getPrecio("Menta");
        }
        if(this.endulCafeAnt == null)
        {
            this.endulCafeAnt = "Menta";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(endulCafeAnt);
        }
    }//GEN-LAST:event_MentaActionPerformed

    private void AvellanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvellanaActionPerformed
        if(this.Avellana.isSelected()){
            precio += TIPO_CAFE.getPrecio("Avellana");
        }
        if(this.endulCafeAnt == null)
        {
            this.endulCafeAnt = "Avellana";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(endulCafeAnt);
        }
    }//GEN-LAST:event_AvellanaActionPerformed

    private void ChicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChicoActionPerformed
        if(this.Chico.isSelected()){
            precio += TIPO_CAFE.getPrecio("Chico");
        }
        
        if(this.tamCafeAnt == null)
        {
            this.tamCafeAnt = "Chico";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tamCafeAnt);
        }
    }//GEN-LAST:event_ChicoActionPerformed

    private void GrandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrandeActionPerformed
        if(this.Grande.isSelected()){
            precio += TIPO_CAFE.getPrecio("Grande");
        }
        if(this.tamCafeAnt == null)
        {
            this.tamCafeAnt = "Grande";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(tamCafeAnt);
        }
    }//GEN-LAST:event_GrandeActionPerformed

    private void EnteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnteraActionPerformed
        if(this.Entera.isSelected()){
            precio += TIPO_CAFE.getPrecio("Entera");
        }
        if(this.lecheCafeAnt == null)
        {
            this.lecheCafeAnt = "Entera";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(lecheCafeAnt);
        }
    }//GEN-LAST:event_EnteraActionPerformed

    private void DescremadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescremadaActionPerformed
        if(this.Descremada.isSelected()){
            precio += TIPO_CAFE.getPrecio("Descremada");
        }
        if(this.lecheCafeAnt == null)
        {
            this.lecheCafeAnt = "Descremada";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(lecheCafeAnt);
        }
    }//GEN-LAST:event_DescremadaActionPerformed

    private void LigeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LigeraActionPerformed
        if(this.Ligera.isSelected()){
            precio += TIPO_CAFE.getPrecio("Ligera");
        }
        if(this.lecheCafeAnt == null)
        {
            this.lecheCafeAnt = "Ligera";
        }
        else
        {
            precio -= TIPO_CAFE.getPrecio(lecheCafeAnt);
        }
    }//GEN-LAST:event_LigeraActionPerformed

    private void FinPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinPedidoActionPerformed
        this.tipoCafeAnt = null;
        this.endulCafeAnt = null;
        this.lecheCafeAnt = null;
        this.tamCafeAnt = null;
        nombreString = this.NombreTextField.getText(); 
        if(this.Americano.isSelected()){
            tipoString = this.Americano.getText();
        }
        else if(this.Capuccino.isSelected()){
            tipoString = this.Capuccino.getText();
        }
        else if(this.Latte.isSelected()){
            tipoString = this.Latte.getText();
        }
        else if(this.Otro.isSelected()){
            tipoString = this.OtroTextField.getText();
        }
        else{
            System.out.println("No ha seleccionado un cafe...");
        }
        if(this.Menta.isSelected()){
            endulString = this.Menta.getText();
        }
        else if(this.Avellana.isSelected()){
            endulString = this.Avellana.getText();
        }
        else if(this.Caramelo.isSelected()){
            endulString = this.Caramelo.getText();
        }
        else if(this.SinEnd.isSelected()){
            endulString = this.SinEnd.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo...");
        }
        if(this.Entera.isSelected()){
            lecheString = this.Entera.getText();
        }
        else if(this.Ligera.isSelected()){
            lecheString = this.Ligera.getText();
        }
        else if(this.Descremada.isSelected()){
            lecheString = this.Descremada.getText();
        }
        else if(this.SinLeche.isSelected()){
            lecheString = this.SinLeche.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo");
        }
        if(this.Chico.isSelected()){
            tamString = this.Chico.getText();
        }
        else if(this.Mediano.isSelected()){
            tamString = this.Mediano.getText();
        }
        else if(this.Grande.isSelected()){
            tamString = this.Grande.getText();
        }
        else{
            System.out.println("No ha seleccionado un campo...");
        }
        
        //this.canceled = false;
        //this.dispose();
        //this.setVisible(true);
        if(orden == null){
            orden = new Orden();
        }
        try {
            orden.agregarCafe(this.getCafe());
        } catch (IOException ex) {
            Logger.getLogger(CafeDialogo.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.precio = 0.0;
        TipoCafeButtonGroup.clearSelection();
        TamButtonGroup.clearSelection();
        LecheButtonGroup.clearSelection();
        EndulButtonGroup.clearSelection();
        NombreTextField.setText(null);
        System.out.println("Orden No: " + System.currentTimeMillis());        
    }//GEN-LAST:event_FinPedidoActionPerformed

    private void OrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenarActionPerformed
        this.dispose();
    }//GEN-LAST:event_OrdenarActionPerformed

    private void HistorialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistorialButtonActionPerformed
        FilenameFilter filter=new FilenameFilter(){
            @Override
            public boolean accept(File Cafe, String fileName) {
            return fileName.endsWith("txt");
            }
        };
        //Ruta donde se quiere buscar
        File f=new File("F:\\Escuela\\Programacion\\Cafe");
        String [] fileList=f.list(filter);
        for (String fileList1 : fileList) {
            System.out.println(fileList1);
        }
        for (String fileList1 : fileList) {
        }
    String entireFileText = null;
        try {
            entireFileText = new Scanner(new File(System.currentTimeMillis() + ".txt")).useDelimiter("\\A").next();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CafeDialogo.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(entireFileText);
  
    }//GEN-LAST:event_HistorialButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CafeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CafeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CafeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CafeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CafeDialogo dialog = new CafeDialogo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Americano;
    private javax.swing.JRadioButton Avellana;
    private javax.swing.JButton Cancelar;
    private javax.swing.JRadioButton Capuccino;
    private javax.swing.JRadioButton Caramelo;
    private javax.swing.JRadioButton Chico;
    private javax.swing.JRadioButton Descremada;
    private javax.swing.ButtonGroup EndulButtonGroup;
    private javax.swing.JLabel Endulzante;
    private javax.swing.JRadioButton Entera;
    private javax.swing.JButton FinPedido;
    private javax.swing.JRadioButton Grande;
    private javax.swing.JButton HistorialButton;
    private javax.swing.JRadioButton Latte;
    private javax.swing.JLabel Leche;
    private javax.swing.ButtonGroup LecheButtonGroup;
    private javax.swing.JRadioButton Ligera;
    private javax.swing.JRadioButton Mediano;
    private javax.swing.JRadioButton Menta;
    private javax.swing.JLabel Nombre;
    private javax.swing.JTextField NombreTextField;
    private javax.swing.JButton Ok;
    private javax.swing.JButton Ordenar;
    private javax.swing.JRadioButton Otro;
    private javax.swing.JLabel OtroLabel;
    private javax.swing.JTextField OtroTextField;
    private javax.swing.JLabel Pregunta;
    private javax.swing.JRadioButton SinEnd;
    private javax.swing.JRadioButton SinLeche;
    private javax.swing.ButtonGroup TamButtonGroup;
    private javax.swing.JLabel Tama単o;
    private javax.swing.ButtonGroup TipoCafeButtonGroup;
    // End of variables declaration//GEN-END:variables

}
